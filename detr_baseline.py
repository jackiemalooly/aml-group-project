# -*- coding: utf-8 -*-
"""Detr_baseline.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15XuxPHan1W3ViqfbHEjBFhY6JWBDsIgG
"""

from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
# %cd /content
!git clone https://github.com/ultralytics/yolov5
# %cd yolov5
# %pip install -r requirements.txt
!pip install comet_ml

# Save to yolov5/utils/comet_logger.py
from comet_ml import Experiment
import matplotlib.pyplot as plt
import seaborn as sns

class CometLogger:
    def __init__(self, api_key, project_name, workspace, experiment_name):
        self.experiment = Experiment(
            api_key=api_key,
            project_name=project_name,
            workspace=workspace,
            auto_output_logging="native"
        )
        self.experiment.set_name(experiment_name)

    def log_metrics(self, metrics: dict, step: int = None):
        for k, v in metrics.items():
            self.experiment.log_metric(k, v, step=step)

    def log_confusion_matrix(self, cm, class_names):
        fig, ax = plt.subplots(figsize=(10, 8))
        sns.heatmap(cm, annot=True, fmt='d', xticklabels=class_names, yticklabels=class_names, cmap='Blues')
        ax.set_title('Confusion Matrix')
        ax.set_xlabel('Predicted')
        ax.set_ylabel('True')
        self.experiment.log_figure(figure=fig, figure_name="Confusion Matrix")

    def end(self):
        self.experiment.end()

!python train.py \
--imgsz 640 \
--batch 32 \
--epochs 50 \
--data "/content/drive/MyDrive/AML/updated dataset for aircraft detection/split_50_per/data.yaml" \
--weights yolov5s.pt \
--project "/content/drive/MyDrive/AML/runs/train" \
--name "yolov5-aircraft" \
--exist-ok

from utils.general import non_max_suppression

import torch
from utils.metrics import ConfusionMatrix
from utils.general import check_dataset
from utils.dataloaders import create_dataloader
import matplotlib.pyplot as plt
import seaborn as sns
from comet_ml import Experiment

# === Setup paths ===
yaml_path = '/content/drive/MyDrive/AML/updated dataset for aircraft detection/split_50_per/data.yaml'
weights_path = '/content/drive/MyDrive/AML/runs/train/yolov5-aircraft/weights/best.pt'

# === Load dataset info ===
data_dict = check_dataset(yaml_path)
class_names = data_dict['names']
nc = len(class_names)

# === Load model ===
model = torch.load(weights_path, map_location='cuda')['model'].float().fuse().eval().cuda()

dataloader, _ = create_dataloader(
    path=data_dict['val'],
    imgsz=640,
    batch_size=32,
    stride=32,
    single_cls=False,
    pad=0.5,
    rect=False,
    prefix='val: '
)


# === Initialize confusion matrix ===
confmat = ConfusionMatrix(nc=nc)

for batch_i, (im, targets, paths, shapes) in enumerate(dataloader):
    im = im.float().cuda() / 255.0  # Convert to float32 and normalize
out, _ = model(im)
out = non_max_suppression(out, conf_thres=0.001, iou_thres=0.6)
confmat.process_batch(out, targets)

# === Plot confusion matrix ===
cm = confmat.matrix
fig, ax = plt.subplots(figsize=(10, 8))
sns.heatmap(cm, annot=False, fmt='d', xticklabels=class_names, yticklabels=class_names, cmap='Blues')
ax.set_xlabel('Predicted')
ax.set_ylabel('True')
ax.set_title('Confusion Matrix')
plt.tight_layout()

# === Log to Comet ===
experiment = Experiment(
    api_key="SmUGipAJkSNWIzSHbN2ODZHqz",
    project_name="v5-baseline-split",
    workspace="razan4949"
)
experiment.set_name("yolov5-aircraft")
experiment.log_figure(figure=fig, figure_name="Confusion Matrix")
experiment.end()